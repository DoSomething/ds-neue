// Labels for form elements. Optional validation styles triggered by client-side validation.
//
// .success    - Successful form validation
// .warning    - Warning form validation (not an error, but worth double-checking).
// .error      - Something's wrong!
//
// Styleguide 4.1.1 - Form Labels
label {
  float: left;
  clear: both;
  width: 100%;
  font-size: 0.9rem;
  font-weight: 600;
  margin: 1em 0 0.25em;
  height: 1.5em;
  overflow: hidden;

  .inner-label {
    position: relative;
    @include transition(top 0.5s);
  }

  &.show-message {
    .inner-label {
      top: -1.5em;
    }
  }

  em {
    font-style: normal;
    color: $med-gray;
  }

  .message {
    &.error {
      color: $error;
    }

    &.warning {
      color: $warning;
    }

    &.success {
      color: $success;
    }
  }
}


// Text input fields. Defaults to full-width, but can be modified to be smaller
// if necessary (use sparingly, it's generally best to fit to grid container).
//
// .short         - Short input width (e.g. for zip codes)
// .medium        - Medium-sized input width (e.g. for phone numbers)
//
// Styleguide 4.1.2 - Text Input Fields
input[type="text"], input[type="search"], input[type="password"] {
  width: 100%;
  font-family: $font-proxima-nova;
  font-size: 1rem;
  border: 1px solid $light-gray;
  border-radius: 5px;
  padding: 0.5em 1em;
  margin: 0 0 0.5em;
  @include transition(border 0.5s);
  @include box-sizing(border-box);
  @include highlight-on-focus;
  -webkit-appearance: none;

  &.short {
    max-width: 80px;
  }

  &.medium {
    max-width: 200px;
  }

  &.error {
    border-color: $error;
  }

  &.warning {
    border-color: $warning;
  }

  &.success {
    border-color: $success;
  }
}

// Specific style rules for search input fields.
//
// Styleguide 4.1.3 - Search Fields
input[type="search"] {
  padding-left: 32px;
  background: #fff no-repeat 12px 50%;
  @include retina-image('assets/images/search', 18px 18px)
}

// Multi-line textarea fields.
//
// Styleguide 4.1.4 - Text Area Fields
textarea {
  width: 100%;
  font-family: $font-proxima-nova;
  font-size: $font-regular;
  border: 1px solid $light-gray;
  border-radius: $lg-border-radius;
  padding: 0.5em 1em 0.3em;
  margin: 0 0 0.5em;
  resize: vertical;
  @include box-sizing(border-box);
  @include highlight-on-focus;
}


// Button styles for both input and anchor buttons. Suitable for all-purpose use. Defaults
// to `.primary` class. The primary (yellow) button style should be used in moderation -
// it is meant to call action to the primary call-to-action on a page and overuse dilutes
// its power.
//
// :hover             - Suble hover state (will not be displayed on touch interfaces)
// :focus             - Focus state for users navigating the page using tab keys.
// :active            - "Pushed" button state
// .disabled          - Disabled (non-interactive) button state. Consider removing button from interface if not necessary to avoid confusion.
// .loading           - AJAX loading animation. Used when loading results inline. <mark>Must be used on &lt;a&gt; or &lt;button&gt; tag. Will not work with &lt;input&gt; tags.
// .tiny              - A tiny button.
// .small             - A smaller button, suitable for use as an interface element.
// .medium            - (Default) A normal call-to-action button size.
// .large             - A large button.
// .secondary         - Should be used if not the main call-to-action on a page.
// .tertiary          - Used to de-emphasize button (for example, a "cancel" option), but still show inline with other fields.
//
// Styleguide 4.1.5 - Buttons
.btn {
  display: inline-block;
  clear: both;
  background: $blue;
  border: 0;
  margin: 0.25rem 0;
  padding: 0.5em 1em 0.4em;
  cursor: pointer;
  color: #fff;
  font-family: $font-proxima-nova;
  font-weight: $weight-bold;
  font-size: $font-medium;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  text-shadow: none;
  border-radius: $lg-border-radius;
  -webkit-appearance: none;
  @include highlight-on-focus;

  &:hover {
    background: lighten($blue, $color-tint);
  }

  &:active {
    outline: 0;
    background: darken($blue, $color-tint);
  }

  &:link, &:active, &:hover {
    // overrides for default <a> styling
    color: #fff;
    text-decoration: none;
  }

  // secondary appearance
  &.secondary {
    background: $dark-gray;
    font-weight: $weight-bold;
    color: #fff;
    text-transform: uppercase;
    text-decoration: none;
    border: 0;

    &:hover {
      background: lighten($off-black, $color-tint);
      box-shadow: none;
    }

    &:active {
      outline: 0;
      background: darken($off-black, $color-tint);
      box-shadow: none;
    }
  }

  // tertiary appearance
  &.tertiary {
    background: none;
    color: $dark-gray;
    font-weight: 500;
    text-transform: none;
    text-decoration: underline;
    border: 0;

    &:hover {
      color: $off-black;
      background-color: none;
      box-shadow: none;
      text-decoration: underline;
    }

    &:active {
      outline: 0;
      background-color: none;
      box-shadow: none;
    }
  }

  // sizes
  &.tiny {
    font-size: $font-small;
  }

  &.small {
    font-size: $font-regular;
  }

  &.medium { // default
    font-size: $font-medium;
  }

  &.large {
    font-size: $font-large;
  }

  // disabled state
  &[disabled="disabled"], &.disabled {
    clear: both;
    background: $light-gray;
    border: 1px solid $light-gray;
    margin: 0 auto;
    margin: 0.25rem;
    padding: 0.40rem 1em 0.25rem;
    cursor: default;
    color: lighten($light-gray, 10%);
    font-family: $font-proxima-nova;
    font-weight: 600;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    border-radius: $lg-border-radius;

    &:hover {
      background: $light-gray;
      box-shadow: none;
    }

    &:active {
      outline: 0;
      background: $light-gray;
      color: lighten($light-gray, 10%);

      box-shadow: none;
    }
  }

  // NOTE: Must be used on an <a> or <button> element. Will not work on <input>.
  &.loading {
    position: relative;
    background: $light-gray;
    border: 2px solid $light-gray;
    color: $light-gray; // hiding the text, but keeping it in the background to preserve dimensions
    box-shadow: none;
    cursor: default;
    @include user-select(none);

    &:hover {
      background: $light-gray;
    }

    &:active {
      color: $light-gray;
    }

    &:before {
      content: "";
      display: block;
      height: 1.5em;
      width: 1.5em;
      margin: 0 auto;
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -0.75em;
      margin-left: -0.75em;
      border: 0.3em solid $light-gray;
      border-radius: 100%;
      @include box-sizing(border-box);
    }

    &:after {
      content: "";
      display: block;
      height: 1.5em;
      width: 1.5em;
      margin: 0 auto;
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -0.75em;
      margin-left: -0.75em;
      border: 0.3em solid darken($light-gray, 10%);
      border-left: 0.3em solid transparent;
      border-bottom: 0.3em solid transparent;
      border-right: 0.3em solid transparent;
      border-radius: 100%;
      @include box-sizing(border-box);
      @include animation(rotation 1.5s infinite linear);
    }
  }
}

input[type="submit"] {
  white-space: normal; // ensures text wraps to new lines when in an <input> element
}

// Select boxes present a list of options on a form.
//
// Styleguide 4.1.6 - Select Boxes
select {
  display: block;
  width: 100%;
  height: 34px;
  border: 1px solid $light-gray;
  @include box-sizing(border-box);
  @include highlight-on-focus;
}

// Spinner to indicate loading content.
//
// Styleguide 4.1.7 - Loading Spinner
.spinner {
  height: 30px;
  width: 30px;
  margin: 0 auto;
  position: relative;
  @include animation(rotation 1.5s infinite linear);
  border: 6px solid $light-gray;
  border-radius: 100%;
}

.spinner:before {
  content: "";
  display: block;
  position: absolute;
  left: -6px;
  top: -6px;
  height: 100%;
  width: 100%;
  border: 6px solid darken($light-gray, 10%);
  border-left: 6px solid transparent;
  border-bottom: 6px solid transparent;
  border-right: 6px solid transparent;
  border-radius: 100%;
}

// Status message styles. These should be used to provide feedback to the user for
// events that occur outside the normal application flow (such as form validation errors).
//
// <mark>Close button is added using JavaScript. See "system-messages.js".</mark>
//
// .error - Used to display errors. Be careful not to blame the user for a mistake.
//
// Styleguide 4.1.8 - Status Banners

.messages {
  position: relative;
  width: 100%;
  background: $purple;
  text-align: left;
  margin: 0;
  padding: 1rem 4rem 1rem 1.5rem;
  @include rgba(color, #fff, 0.7);
  @include outer-container;

  b,
  strong {
    font-weight: 800;
    color: #fff;
    padding: 0 0.3rem;
  }

  a {
    font-weight: 800;
    color: #fff;
  }

  &.error {
    background: $error;
  }

  .message-close-button {
    @include close-parent;

    top: 0.4rem;
    opacity: 0.7; // Match opacity to parent copy style
  }
}
